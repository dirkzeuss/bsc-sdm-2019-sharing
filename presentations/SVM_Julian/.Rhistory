pred <- predict(mymodel, iris)
knitr::opts_chunk$set(echo = TRUE)
install.packages("datasets")
library(datasets)
library(e1071)
data(iris) #drei verschiedene Pflanzenarten
str(iris)
install.packages("datasets")
library(e1071)
data(iris) #drei verschiedene Pflanzenarten
str(iris)
install.packages("vembedr")
embed_url("https://www.youtube.com/watch?v=Y6RRHw9uN9o&t=279s")
library(htmltools)
embed_url("https://www.youtube.com/watch?v=Y6RRHw9uN9o&t=279s")
library(vembedr)
embed_url("https://www.youtube.com/watch?v=Y6RRHw9uN9o&t=279s")
library(e1071)
data(iris) #drei verschiedene Pflanzenarten
str(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +
geom_point() +
labs(title = 'Sepal Length vs Sepal Width')
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +
geom_point() +
labs(title = 'Sepal Length vs Sepal Width')
ggplot(iris, aes(x = Petal.Length, y = Petal.Width, colour = Species)) +
geom_point() +
labs(title = 'Petal Length vs Petal Width')
#Generierung des Models
mymodel <- svm(Species~., data=iris)
summary(mymodel)
#Plot der SVM Classification
plot(mymodel, data=iris,
Petal.Width~Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4))
#Auswertung des Modells
pred <- predict(mymodel, iris)
tab <- table(Predicted = pred, Actual = iris$Species)
tab
1-sum(diag(tab))/sum(tab) #Gibt in Prozent an, wie genau das Modell ist
plot(mymodel, data=iris,
Petal.Width~Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4))
![](C:/Users/Julian/Desktop/SVM/SVM_picture.png)
