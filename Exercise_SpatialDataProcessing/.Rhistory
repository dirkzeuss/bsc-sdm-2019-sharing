test
install.packages("RCurl")
install.packages("RCurl")
install.packages("openssl")
install.packages("openssl")
install.packages("RCurl")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("RCurl")
Sys.info()
Sys.getenv()
sessionInfo()
install.packages(ling2GI)
install.packages("ling2GI")
install.packages("link2GI")
require("raster")
install.packages("raster")
require("raster")
require("rdgal")
install.packages("rdgal")
install.packages("rggal")
install.packages("rgdal")
install.packages("rgdal")
require("rgdal")
require("sp")
require("rgdal")
require("raster")
require("link2GI")
install.packages("link2GI")
install.packages("link2GI")
require("link2GI")
require("link2GI")
require("raster")
require("rgdal")
require("sp")
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
install.packages(c("digest", "rlang"))
require("link2GI")
require("raster")
require("rgdal")
require("sp")
require("link2GI")
require("raster")
require("rgdal")
require("sp")
v1 <- c(r1,r2,r3,r4,r5)
r1 <- a+b
r2 <- a-b
r3 <- a*b
r4 <- a/b
v1 <- c(r1,r2,r3,r4,r5)
r1 <- a+b
a^b
a <- 2
b <- 5
r5 <- a^b
r5
v1 <- c(r1,r2,r3,r4,r5)
a <- 2
b <- 5
r1 <- a+b
r2 <- a-b
r3 <- a*b
r4 <- a/b
r5 <- a^b
v1 <- c(r1,r2,r3,r4,r5)
v1[5] <- a^b
v1 <- c(v1, a**b)
a <- 2
b <- 5
r1 <- a+b
r2 <- a-b
r3 <- a*b
r4 <- a/b
r5 <- a^b
v1 <- c(r1,r2,r3,r4,r5)
v2 <- c(v1, a**b)
str(v1)
str(v2)
a <- 2
b <- 5
r1 <- a+b
r2 <- a-b
r3 <- a*b
r4 <- a/b
r5 <- a^b
v1 <- c(r1,r2,r3,r4)
v2 <- c(v1, a**b)
str(v2)
str(v1)
v1 <- c(r1,r2,r3,r4,r5)
v2 <- c(v1, a**b)
v <- c(r1,r2,r3,r4)
v1 <- c(r1,r2,r3,r4,r5)
v2 <- c(v, a**b)
all.equal(v1,v2)
identical(v1,v2)
#Task 6
v2 <- c("sum", "difference", "product", "devision", "power")
v2
# Task 7
v2
df <- data.frame(v1,v2)
df
df
df
df <- data.frame(v1,v2)
df
# Task 9
df <- data.frame(Result = v1, Operation = v2)
df
library("raster")
vignette("raster")
getData('GADM', country='FRA', level=1)
bio <- getData('worldclim',var='bio',res=10)
plot(bio)
prec <- getData('worldclim',var='prec',res=10)
plot(prec)
prec
plot(prec[1])
plot(prec[[1]])
fra <- getData('GADM', country='FRA', level=1)
plot(fra, add=T)
fra <- getData('GADM', country='FRA', level=3)
plot(prec[[1]])
plot(fra, add=T)
fra <- getData('GADM', country='FRA', level=0)
plot(prec[[1]])
plot(fra, add=T)
ger <- getData('GADM', country='GER', level=0)
ger <- getData('GADM', country='DE', level=0)
plot(ger, add=T)
library("raster")
prec <- getData("worldclim", var="prec", res=10)
prec
plot(prec$prec1)
fra <- getData('GADM', country='FRA', level=0)
fra
extent(fra)
plot(fra)
plot(prec$prec1)
plot(fra, add=T)
prec
extent(fra)
temp <- extent(fra)
temp
str(temp)
cropped_prec <- raster::crop(prec, extent(fra))
plot(cropped_prec$prec1)
clipped_prec <- mask(cropped_prec, fra)
plot(clipped_prec$prec1)
clipped_prec
clipped_prec_sum
clipped_prec
clipped_prec_sum <- sum(clipped_prec)
clipped_prec_sum
rep(1,12)
clipped_prec_sum_2 <- raster::stackApply(clipped_prec, rep(1,12), sum, na.rm=FALSE)
clipped_prec_sum_2
plot(clipped_prec_sum)
plot(clipped_prec_sum)
plot(clipped_prec_sum)
plot(fra, add=T)
plot(clipped_prec_sum)
plot(fra, add=T)
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2) # roughly the location of Paris
gewtwd()
getwd()
jpeg("FirstSimpleMap.jpg")
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2)
dev.off()
jpeg("FirstSimpleMap.jpg")
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2)
dev.off()
jpeg("FirstSimpleMap.jpg")
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2)
dev.off()
jpeg("FirstSimpleMap.jpg")
plot(clipped_prec_sum)
plot(fra, add=T)
#points(2.349014, 48.864716, pch=8, cex=2)
dev.off()
38*250
50000  0.0035 * 3.90
50000 *  0.0035 * 3.90
#install.packages("sp")
library(sp)
#install.packages("raster")
library(raster)
# chooseCRANmirror(30)
# options("repos")
# local({r <- getOption("repos")
# r["CRAN"] <- "https://ftp.gwdg.de/pub/misc/cran/"
# options(repos=r)
# })
#install.packages("sp")
library(sp)
#install.packages("raster")
library(raster)
#install.packages("rgdal")
library(rgdal)
#install.packages("maps")
#install.packages("maptools")
library(maps)
library(maptools)
getwd()
setwd("~/bsc-sdm-2019-sharing/Exercise_SpatialDataProcessing")
getwd()
prec <- getData("worldclim", var="prec", res=10, path="../data")
prec <- getData("worldclim", var="prec", res=10, path="../data")
plot(prec$prec1) #Ausw?hlen, welcher Layer geplottet werden soll mit $
#Frankreich mit Grenze
fra <- getData('GADM', country='FRA', level=0, path="../data")
plot(fra)
plot(prec$prec1)
plot(fra, add=T)
cropped_prec <- crop(prec, extent(fra))
plot(cropped_prec$prec1)
#Ausstanzen des Vektorlayers auf den Rasterlayer
clipped_prec <- mask(cropped_prec, fra) #2tes der Layer der ausgestantzt wird
plot(clipped_prec$prec1)
#Summieren der Werte(z.B. Niederschlag)
clipped_prec_sum <- sum(clipped_prec)
clipped_prec_sum_2 <- raster::stackApply(clipped_prec, rep(1,12), sum, na.rm=FALSE)
plot(clipped_prec_sum)
#Erstellen einer Karte mit den Umriss von Frankreich + einen Punkt Paris
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2) # roughly the location of Paris
plot(clipped_prec_sum)
plot(fra, add=T)
points(2.349014, 48.864716, pch=8, cex=2)
## Aufgaben ####
prec <- getData("worldclim", var="prec", res=10, path="../data")
de <- getData('GADM', country='DE', level=0, path="../data")
plot(DE_alt)
DE_alt <- getData("alt",country="DE", res=10, path="../data")
plot(DE_alt)
plot(de, add=T) #Plottet Grenze
x <- c(7.4652981, 9.7019675, 7.8502943, 9.5722309, 9.4797461, 8.796667, 13.413215, 8.6821267, 11.4719457)
y <- c(51.5135872, 50.8701345, 51.0282107, 49.9892207, 51.3127114, 51.058889, 52.521918, 50.1109221, 49.4937364)
name <- c("Dortmund", "Bad_Hersfeld", "Olpe", "Lohr", "Kassel", "Frankenberg", "Berlin", "Frankfurt", "Happburg")
attributes <- as.data.frame(cbind(x,y))
xy <- cbind(x,y)
SPDF <- SpatialPointsDataFrame(xy, attributes)
SPDF
xy <- cbind(x,y)
SPDF <- SpatialPointsDataFrame(xy, attributes)
proj4string(SPDF) <- crs("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
SPDF_1 <- spTransform(SPDF, CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
plot(DE_alt, main="Largest rivers in Germany")
plot(SPDF_1, pch = 19, add=T)
plot(DE_alt, main="Largest rivers in Germany")
plot(SPDF_1, pch = 19, add=T)
Muenchen <- points(11.581981, 48.135125, pch=22, col="red")
Hamburg <- points(9.993682, 53.551085, pch=22, col="red")
Berlin <- points(13.413215, 52.521918, pch=22, col="red")
Marburg <- points(8.7667933, 50.8021728, pch=21, col="red")
legend("bottomright",legend=c("river", "cities", "three largest cities", "Marburg"),
cex=0.4, col = c("black", "black", "red","red"), lty = c(1,NA,NA, NA), pch = c(NA, 19, 22, 21))
text(15, 50, "Bad Hersfeld - Marburg = 66km, Frankfurt - Marburg = 75km,
Berlin - Marburg = 372km,Dortmund - Marburg = 120km,
Lohr - Marburg = 107km,Olpe - Marburg = 70km,
Kassel - Marburg = 76km, Frankenberg - Marburg = 28km,
Happburg - Marburg = 241km ", cex=0.17)
